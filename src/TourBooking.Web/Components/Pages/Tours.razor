@page "/tours"
@using TourBooking.ApiService.Contracts
@rendermode InteractiveServer
@inject ToursApiClient ToursApi

<PageTitle>Tours</PageTitle>

<h1>Available Tours</h1>

@if (_tours is null)
{
    <p>Loading tours...</p>
}
else if (_tours.Length == 0)
{
    <p>No tours available.</p>
    <p>Would you like to <NavLink href="/tours/create">create a new tour</NavLink>?</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Start Date</th>
                <th>End Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var tour in _tours)
            {
                <tr>
                    <td>@tour.Name</td>
                    <td>@tour.Description</td>
                    <td>@tour.Price.ToString("C")</td>
                    <td>@tour.StartDate.ToString("yyyy-MM-dd")</td>
                    <td>@tour.EndDate.ToString("yyyy-MM-dd")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {


    private GetTourModel[]? _tours;

    protected override async Task OnInitializedAsync()
    {
        var tourDtos = await ToursApi.GetAllTours(CancellationToken.None);
        _tours = [.. tourDtos.Select(t => new GetTourModel(t.Name, t.Description, t.Price, t.StartDate, t.EndDate))];
    }

    private sealed record GetTourModel(string Name, string Description, decimal Price, DateOnly StartDate, DateOnly EndDate);
}
